<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.hrms.mappers.workMapper">
	
	<select id="selectMyWork" parameterType="java.util.Map" resultType="edu.hrms.vo.WorkVO">
		SELECT * FROM work
			WHERE userid = #{userid} 
				AND DATE = #{now}
	</select>
	
	<select id="selectThisWeek" parameterType="java.util.Map" resultType="String">
		SELECT IFNULL(SEC_TO_TIME(SUM(TIME_TO_SEC(SUBTIME(end, start)))),'00:00:00')
			FROM ${table} 
    		WHERE date BETWEEN #{startDay} and #{endDay}
    			<if test='table.equals("overtime")'>
					AND state = 2
	 			</if>
	</select>
	
	<insert id="insert" parameterType="java.util.Map">	
		INSERT INTO work (userid, date, start) 
		          VALUES (#{userid} , #{date} , #{time})
	</insert>
	
	<update id="update" parameterType="java.util.Map">
		UPDATE work 
			SET end = #{time}
		   WHERE userid = #{userid}
		   	AND date = #{date}
	</update>
	
	<insert id="insertOvertime" parameterType="java.util.Map">	
		INSERT INTO overtime (userid, date, start, end, content) 
						VALUES   (#{userid}, #{date}, #{start}, #{end}, #{content})
	</insert>
	
	<select id="getSignLineList" parameterType="java.util.Map" resultType="edu.hrms.vo.SignLineVO">
		SELECT s.signLineNo, s.userid, u.name, 
				(CASE 
					WHEN u.dept = 'M' THEN '대표'
	            WHEN u.dept = 'D' THEN '개발부'
	            WHEN u.dept = 'S' THEN '영업부'
	            WHEN u.dept = 'P' THEN '기획부'
	            WHEN u.dept = 'H' THEN '인사부' END
				) AS dept, 
				(CASE 
					WHEN u.position = 'C' THEN '대표'
	            WHEN u.position = 'D' THEN '부장'
	            WHEN u.position = 'L' THEN '팀장'
	            WHEN u.position = 'E' THEN '사원' END
				) AS position
				, s.type, s.signOrder 
			FROM signline s 
			INNER JOIN user u ON s.userid = u.userid
			WHERE (type='O' OR type='A') AND
		  			(SUBSTRING(s.userid,1,2) = SUBSTRING(#{userid},1,2) OR s.userid='99000') AND
		  			u.position IN 
		  			<foreach item="item" index="index" collection="positionArr" open="(" separator="," close=")">
		  				#{item}
		  			</foreach>
		  	ORDER BY signOrder
	</select>
	
	<select id="getMaxNoByUserId" parameterType="String" resultType="int">
		SELECT * FROM overtime 
			WHERE overtimeno = (SELECT MAX(overtimeNo) FROM overtime WHERE userid = #{userid})
	</select>
	
	<insert id="insertOvertimeSign" parameterType="java.util.List">
		INSERT INTO overtimesign (overtimeNo, signLineNo) VALUES
			<foreach collection="list" index="index" item="item" separator=",">
				(#{item.overtimeNo}, #{item.signLineNo})
			</foreach>
	</insert>
	
	
	<select id="selectAllMyWork" parameterType="java.util.Map" resultType="edu.hrms.vo.WorkVO">
		SELECT w.*
				, IFNULL(SEC_TO_TIME((TIME_TO_SEC(SUBTIME(o.end, o.start)))),'-') AS overtime 
         	, SEC_TO_TIME((TIME_TO_SEC(ADDTIME(SUBTIME(w.end, w.start),IFNULL(SEC_TO_TIME((TIME_TO_SEC(SUBTIME(o.end, o.start)))),0))))) AS total
			FROM work w
			LEFT JOIN overtime o ON w.userid = o.userid 
					AND w.date = o.date
					AND o.state NOT IN (3,9)
			WHERE w.userid = #{userid}
				<if test='startDate == null'>
					AND w.date <![CDATA[<=]]> #{endDate}
	 			</if>
				<if test='startDate != null'>
					AND w.date BETWEEN #{startDate} AND #{endDate}
	 			</if>
			
			ORDER BY date DESC
	</select>
	
	<select id="selectAllOvertime" parameterType="java.util.Map" resultType="edu.hrms.vo.OvertimeVO">
		SELECT *, SEC_TO_TIME((TIME_TO_SEC(SUBTIME(end, start)))) AS total 
			FROM overtime
   		WHERE userid = #{userid} 
   			<if test='startDate == null'>
					AND date <![CDATA[<=]]> #{endDate}
	 			</if>
				<if test='startDate != null'>
					AND date BETWEEN #{startDate} AND #{endDate}
	 			</if>
   		ORDER BY date DESC, overtimeNo DESC
	</select>
	
	<select id="selectOvertime" parameterType="int" resultType="edu.hrms.vo.OvertimeVO">
		SELECT o.overtimeNo, o.userid, o.date, DATE_FORMAT(start, '%H:%i') AS start, DATE_FORMAT(end, '%H:%i') AS end, o.state, content, rdate, u.name
			FROM overtime o
			INNER JOIN user u ON o.userid = u.userid
			WHERE overtimeNo = #{overtimeNo}
	</select>
	
	<select id="getOvertimeSignList" parameterType="int" resultType="edu.hrms.vo.OvertimeSignVO">
		SELECT os.*, u.name, u.dept, 
				(CASE 
					WHEN u.position = 'C' THEN '대표'
	            WHEN u.position = 'D' THEN '부장'
	            WHEN u.position = 'L' THEN '팀장'
	            WHEN u.position = 'E' THEN '사원' END
				) AS position
	        	, s.signorder,
	        	LAG(os.state) OVER() AS prev_state
			FROM overtimesign os
			INNER JOIN signline s ON os.signlineno = s.signlineno
		   INNER JOIN user u ON s.userid = u.userid
		   WHERE os.overtimeNo = #{overtimeNo}
		   ORDER BY signOrder
	</select>
	
	<update id="withdrawal" parameterType="int">
		UPDATE overtime
			SET state = 9
			WHERE overtimeNo = #{overtimeNo}
	</update>
	
	<delete id="overtimeDelete" parameterType="int">
		DELETE FROM overtimesign
			WHERE overtimeNo = #{overtimeNO}
	</delete>
	
	<select id="isOvertimeApplicationToday" parameterType="Map" resultType="int">
		SELECT COUNT(*)
			FROM overtime
			WHERE userid = #{userid}
				AND date = #{now} 
				AND state NOT IN (3,9)
	</select>
	
	<select id="selectAllWork" parameterType="Map" resultType="edu.hrms.vo.WorkVO">
		SELECT w.*, u.name, 
				(CASE 
					WHEN u.position = 'C' THEN '대표'
	            WHEN u.position = 'D' THEN '부장'
	            WHEN u.position = 'L' THEN '팀장'
	            WHEN u.position = 'E' THEN '사원' END
				) AS position, 
				
			FROM work w
			INNER JOIN user u ON w.userid = u.userid
			INNER JOIN overtime o ON u.userid = o.userid
			WHERE u.dept = #{dept}
			
			
	</select>
	
</mapper>



